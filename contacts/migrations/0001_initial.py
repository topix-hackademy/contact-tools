# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-06-08 08:31
from __future__ import unicode_literals

import contacts.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CCRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
            ],
            options={
                'verbose_name_plural': 'CCRelations',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_centralservices_id', models.IntegerField(blank=True, help_text='ID of this Company in the old CS', null=True, verbose_name='Old Centralservices ID')),
                ('company_custom_id', models.IntegerField(blank=True, help_text='ID of this Company in external systems (eg. ESolver)', null=True, verbose_name='Custom External ID')),
                ('company_name', models.CharField(max_length=200, verbose_name='Company Name')),
                ('company_short_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Company Short Name')),
                ('company_business_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Company Business Name')),
                ('company_vat_number', models.CharField(blank=True, help_text='international VAT number (eg. partita IVA)', max_length=30, null=True, verbose_name='VAT Number')),
                ('company_tax_code', models.CharField(blank=True, help_text='(eg. codice fiscale)', max_length=30, null=True, verbose_name='Tax Code')),
                ('company_address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Company Address')),
                ('company_cap', models.CharField(blank=True, max_length=10, null=True, verbose_name='CAP')),
                ('company_city', models.CharField(blank=True, max_length=200, null=True, verbose_name='City')),
                ('company_province', models.CharField(blank=True, max_length=200, null=True, verbose_name='Province')),
                ('company_country', models.CharField(blank=True, max_length=200, null=True, verbose_name='Country')),
                ('company_mailingaddress', models.TextField(blank=True, null=True, verbose_name='Mailing Address')),
                ('company_phone_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Phone Number')),
                ('company_fax', models.CharField(blank=True, max_length=200, null=True, verbose_name='FAX')),
                ('company_website', models.CharField(blank=True, max_length=200, null=True, verbose_name='WebSite')),
                ('company_notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('company_is_valid', models.BooleanField(default=True, verbose_name='Is Valid')),
                ('company_logo', models.ImageField(default='logos/nologo.png', help_text='Company logo', upload_to='logos/')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
            ],
            options={
                'ordering': ('company_name',),
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='CompanyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=200, verbose_name='Company Type')),
                ('is_valid', models.BooleanField(default=True, verbose_name='Is Valid')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
            ],
            options={
                'ordering': ('type_name',),
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_centralservices_id', models.IntegerField(blank=True, help_text='ID of this contact in the old CS', null=True, verbose_name='Old Centralservices ID')),
                ('contact_username', models.CharField(blank=True, max_length=200, null=True, verbose_name='Contact User Name')),
                ('contact_first_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Contact First Name')),
                ('contact_last_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Contact Last Name')),
                ('contact_email', models.EmailField(default='', max_length=200, unique=True, verbose_name='Contact Email')),
                ('contact_email_secondary', models.EmailField(blank=True, max_length=200, null=True, verbose_name='Contact Email Secondary')),
                ('contact_phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Contact Phone')),
                ('contact_phone_secondary', models.CharField(blank=True, max_length=100, null=True, verbose_name='Contact Phone Secondary')),
                ('contact_notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('contact_company', models.ManyToManyField(through='contacts.CCRelation', to='contacts.Company')),
            ],
            options={
                'ordering': ('contact_email',),
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.CreateModel(
            name='ContactType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=200, unique=True, verbose_name='Contact Type')),
                ('is_valid', models.BooleanField(default=True, verbose_name='Is Valid')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
            ],
            options={
                'ordering': ('type_name',),
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=200, verbose_name='Service Name')),
                ('token', models.CharField(default=contacts.models.create_uid, max_length=200, unique=True, verbose_name='Token')),
                ('is_valid', models.BooleanField(default=True, verbose_name='Is Valid')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('activation_date', models.DateTimeField(auto_now_add=True, verbose_name='Activation Date')),
                ('delete_date', models.DateTimeField(blank=True, null=True, verbose_name='Delete Date')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
            ],
            options={
                'ordering': ('service_name',),
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.AddField(
            model_name='company',
            name='company_type',
            field=models.ManyToManyField(to='contacts.CompanyType'),
        ),
        migrations.AddField(
            model_name='ccrelation',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Company'),
        ),
        migrations.AddField(
            model_name='ccrelation',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.Contact'),
        ),
        migrations.AddField(
            model_name='ccrelation',
            name='contact_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.ContactType'),
        ),
    ]
